apiVersion: v1
kind: Namespace
metadata:
  name: cdi-crd-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: cdi-crd-upgrade
  name: cdi-crd-manifest
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "2"
data:
  crd: |-
    {{ $.Files.Get "crds/cdi.yaml" | nindent 4 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: cdi-crd-upgrade
  name: cdi-crd-upgrader
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "3"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cdi-crd-upgrader
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "3"
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    resourceNames:
      - "cdi-crd-manifest"
    verbs: [ "get" ]
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    resourceNames:
      - "cdis.cdi.kubevirt.io"
    verbs: [ "get", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cdi-crd-upgrader
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "4"
subjects:
  - kind: ServiceAccount
    namespace: cdi-crd-upgrade
    name: cdi-crd-upgrader
roleRef:
  kind: ClusterRole
  name: cdi-crd-upgrader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: cdi-crd-upgrade
  name: cdi-crd-upgrader
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "5"
spec:
  template:
    metadata:
      name: cdi-crd-upgrader
    spec:
      serviceAccountName: cdi-crd-upgrader
      restartPolicy: OnFailure
      containers:
        - name: cdi-crd-upgrader
          image: {{ .Values.kubecli.image }}
          command:
            - /bin/sh
            - -c
            - >
              kubectl get configmap cdi-crd-manifest -o "jsonpath={.data['crd']}" | kubectl apply -f -;
              sleep 10; # wait for the operator to handle the update
